{"version":3,"sources":["serviceWorker.js","reducer/cardReducer.js","context/cardContext.js","components/Card/Card.js","components/CardList/CardList.js","components/DateForm/DateForm.js","provider/CardFormProvider.js","components/Home/Home.js","router/AppRouter.js","index.js"],"names":["Boolean","window","location","hostname","match","cardReducer","state","action","type","filter","card","title","concat","Object","toConsumableArray","initialState","CardContext","React","createContext","CardProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","cards","dispatchCards","react_default","a","createElement","Provider","value","children","Card","_ref","media_type","url","explanation","_useContext","useContext","_useState","useState","_useState2","showMore","setShowMore","showMoreTextVis","showMoreBtnVis","showLessBtnVis","className","style","width","src","alt","role","onClick","e","text","target","textContent","console","log","CardList","map","components_Card_Card","key","DateForm","year","setYear","_useState3","_useState4","month","setMonth","_useState5","_useState6","day","setDay","_useState7","_useState8","msg","setMsg","callApi","asyncToGenerator","regenerator_default","mark","_callee","date","link","response","_ref2","wrap","_context","prev","next","Date","toJSON","split","fetch","sent","json","abrupt","t0","stop","_x","_x2","_x3","apply","this","arguments","isFormValid","err","currentYear","parseInt","getFullYear","inputYear","currentMonth","getMonth","currentDay","getDate","isNaN","clearInput","placeholder","onChange","CardFormProvider","cardContext_CardProvider","components_DateForm_DateForm","components_CardList_CardList","Home","provider_CardFormProvider","Router","react_router_dom","basename","react_router","path","component","exact","ReactDOM","render","AppRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90836682.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const cardReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'REMOVE_CARD':\r\n            return state.filter(card => card.title !== action.title);\r\n        case 'ADD_CARD':\r\n            return [ ...state, action.card ];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cardReducer;","import React, { useReducer } from 'react';\r\nimport cardReducer from '../reducer/cardReducer';\r\n\r\nconst initialState = [];\r\n\r\nconst CardContext = React.createContext(initialState);\r\n\r\nconst CardProvider = (props) => {\r\n    const [cards, dispatchCards] = useReducer(cardReducer, initialState);\r\n\r\n    return (\r\n        <CardContext.Provider value={[ cards, dispatchCards ]} >\r\n            {props.children}\r\n        </CardContext.Provider>\r\n    )\r\n}\r\n\r\nexport { CardContext, CardProvider };","import React, { useContext, useState }  from 'react';\r\nimport { CardContext } from '../../context/cardContext';\r\nimport './Card.css';\r\n\r\nconst Card = ({  media_type, url, title, explanation }) => {\r\n    const [ , dispatchCards ] = useContext(CardContext);\r\n    const [showMore, setShowMore] = useState(false)\r\n\r\n    const onClick = (e) => {\r\n        const text = e.target.textContent;\r\n        console.log('here', e.target);\r\n        if (text === 'Remove') {\r\n            dispatchCards({ \r\n                type: 'REMOVE_CARD', \r\n                title\r\n            });\r\n        } else if (text === 'Show More') {\r\n            setShowMore(true);\r\n        } else if (text === 'Show Less') {\r\n            setShowMore(false);\r\n        }\r\n    }\r\n\r\n    const showMoreTextVis = showMore ? '' : 'hide-text';\r\n    const showMoreBtnVis = showMore ? 'hide-btn' : '';\r\n    const showLessBtnVis = showMore ? '' : 'hide-btn';\r\n\r\n    return (\r\n        <div className=\"card my-3\" style={{width: `18rem`}}>\r\n            {media_type === 'image' && <img src={url} className=\"card-img-top\" alt=\"space\" />}\r\n            {media_type === 'video' && <iframe title=\"space\" src={url}></iframe>}\r\n            <div className={`card-body ${showMoreTextVis}`} >\r\n                {title && <h5 className=\"card-title\">{title}</h5>}\r\n                {explanation && <p className=\"card-text\">{explanation}</p>}\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" onClick={onClick}>\r\n                <button type=\"button\" className=\"btn btn-light\">Remove</button>\r\n                <button type=\"button\" className={`btn btn-light ${showMoreBtnVis}`}>Show More</button>\r\n                <button type=\"button\" className={`btn btn-light ${showLessBtnVis}`}>Show Less</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { useContext } from 'react';\r\nimport Card from '../Card/Card';\r\nimport { CardContext } from '../../context/cardContext';\r\n\r\nconst CardList = () => {\r\n    const [cards] = useContext(CardContext);\r\n\r\n    return (\r\n        <div className=\"d-flex flex-wrap justify-content-around align-items-start\">\r\n            {cards.map(({ media_type, url, title, explanation }) => (\r\n                <Card media_type={media_type} url={url} title={title} explanation={explanation} key={url} />                    \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React, { useState, useContext } from 'react';\r\nimport { CardContext } from '../../context/cardContext';\r\n\r\nconst DateForm = () => {\r\n    const [year, setYear] = useState('');\r\n    const [month, setMonth] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [msg, setMsg] = useState('Enter a date and receive a picture or video');\r\n    const [ , dispatchCards] = useContext(CardContext);\r\n    \r\n    const callApi = async (year, month, day) => {\r\n        try {\r\n            const date = new Date(year, month-1, day).toJSON().split(\"T\")[0];\r\n            const link = `https://api.nasa.gov/planetary/apod?api_key=KlW1riylQ5ITY3IL2JaW0H045rpSJduLfqvaHd0i&date=${date}`;\r\n            const response = await fetch(link);\r\n            const { media_type, url, title, explanation } = await response.json();\r\n            const card = { media_type, url, title, explanation };\r\n            dispatchCards({ \r\n                type: 'ADD_CARD', \r\n                card \r\n            });\r\n            return card;\r\n        } catch (e) {\r\n            setMsg('Unable to make request, server issues. Please try again later or tomorrow')\r\n        }\r\n    }\r\n\r\n    const onClick = () => {\r\n        if (!isFormValid()) return;\r\n\r\n        callApi(year, month, day);\r\n        clearInput('');\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        let err = '';\r\n        const [ startYear, endYear ] = [ 1996, 2019 ];\r\n        const [ startMonth, endMonth ] = [ 1, 12 ];\r\n        const [ startDay, endDay ] = [ 1, 30 ]\r\n        const currentYear = parseInt(new Date().getFullYear());\r\n        const inputYear = parseInt(year);\r\n        const currentMonth = new Date().getMonth() + 1;\r\n        const currentDay = new Date().getDate();\r\n\r\n        if (year === '' || month === '' || day === '') {\r\n            err = 'Missing input';\r\n        } else if (isNaN(year) || isNaN(month) || isNaN(day)) {\r\n            err = 'Wrong format, use YYYY/MM/DD';\r\n        } else if (year < startYear || year > endYear) {\r\n            err = `Year must be within ${startYear} and ${endYear}`;\r\n        } else if (month < startMonth || month > endMonth) {\r\n            err = `Month must be within ${startMonth} and ${endMonth}`;\r\n        } else if (day < startDay || day > endDay) {\r\n            err = `Day must be within ${startDay} and ${endDay}`;\r\n        } else if (inputYear === currentYear) {\r\n            if (month > currentMonth || day > currentDay) {\r\n                err = 'Date must not lie in the future'\r\n            }\r\n        }\r\n\r\n        setMsg(err);\r\n        return !err;\r\n    }\r\n\r\n    const clearInput = () => {\r\n        setYear('');\r\n        setMonth('');\r\n        setDay('');\r\n        setMsg('');\r\n    } \r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <form>\r\n                <h3 className=\"mb-3\">Astronomy Fun Facts</h3>\r\n                {msg && <p>{msg}</p>}\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-4 col-md-3\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"YYYY\" \r\n                            value={year} onChange={(e) => setYear(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-4 col-md-3\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"MM\" \r\n                            value={month} onChange={(e) => setMonth(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-4 col-md-3\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"DD\" \r\n                            value={day} onChange={(e) => setDay(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 d-flex justify-content-center mt-3 mt-md-0\">\r\n                        <div className=\"btn-group\" role=\"group\" >\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={onClick}>Submit</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={clearInput}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DateForm;","import React from 'react';\r\nimport CardList from '../components/CardList/CardList';\r\nimport { CardProvider } from  '../context/cardContext';\r\nimport DateForm from '../components/DateForm/DateForm';\r\n\r\nconst CardFormProvider = () => {\r\n    return (\r\n        <CardProvider>\r\n            <DateForm />\r\n            <CardList />\r\n        </CardProvider>\r\n    );\r\n}\r\n\r\nexport default CardFormProvider;\r\n","import React from 'react';\r\n// import Header from '../Header/Header';\r\nimport CardFormProvider from '../../provider/CardFormProvider';\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            {/* <Header /> */}\r\n            <CardFormProvider />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from '../components/Home/Home';\r\n// import UserForm from '../components/UserForm/UserForm';\r\n\r\nconst Router = () => {\r\n    return (\r\n        <BrowserRouter basename=\"/date-space\" >\r\n            <Switch>\r\n                <Route path=\"/\" component={Home} exact />\r\n                {/* <Route path=\"/form\" component={UserForm} /> */}\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AppRouter from './router/AppRouter'\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}